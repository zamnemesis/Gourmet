CREATE TABLE gourmet.users
(
  user_id text NOT NULL,
  login text NOT NULL,
  password text NOT NULL,
  CONSTRAINT user_pkey PRIMARY KEY (user_id)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE gourmet.users
  OWNER TO postgres;

CREATE TABLE gourmet.category
(
  category_id text NOT NULL,
  name text NOT NULL,
  CONSTRAINT category_pkey PRIMARY KEY (category_id)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE gourmet.category
  OWNER TO postgres;


  CREATE TABLE gourmet.cuisine
(
  cuisine_id text NOT NULL,
  name text NOT NULL,
  description text,
  CONSTRAINT cuisine_pkey PRIMARY KEY (cuisine_id)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE gourmet.cuisine
  OWNER TO postgres;


   CREATE TABLE gourmet.preference
(
  preference_id text NOT NULL,
  name text NOT NULL,
  CONSTRAINT preference_pkey PRIMARY KEY (preference_id)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE gourmet.preference
  OWNER TO postgres;


  CREATE TABLE gourmet.product
(
  product_id text NOT NULL,
  name text NOT NULL,
  description text,
  CONSTRAINT product_pkey PRIMARY KEY (product_id)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE gourmet.product
  OWNER TO postgres;


  CREATE TABLE gourmet.recipe
(
  recipe_id text NOT NULL,
  name text NOT NULL,
  instruction text NOT NULL,
  "time" integer,
  recipecol text,
  portion integer,
  preference_id text,
  cuisine_id text,
  category_id text,
  CONSTRAINT recipe_pkey PRIMARY KEY (recipe_id),
  CONSTRAINT recipe_categoty_id_fkey FOREIGN KEY (categoty_id)
      REFERENCES gourmet.category (category_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT recipe_cuisine_id_fkey FOREIGN KEY (cuisine_id)
      REFERENCES gourmet.cuisine (cuisine_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT recipe_preference_id_fkey FOREIGN KEY (preference_id)
      REFERENCES gourmet.preference (preference_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE gourmet.recipe
  OWNER TO postgres;


  CREATE TABLE gourmet.ingredient
(
  ingredient_id text NOT NULL,
  product_id text NOT NULL,
  recipe_id text NOT NULL,
  amount text,
  CONSTRAINT ingredient_pkey PRIMARY KEY (ingredient_id),
  CONSTRAINT ingredient_product_id_fkey FOREIGN KEY (product_id)
      REFERENCES gourmet.product (product_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT ingredient_recipe_id_fkey FOREIGN KEY (recipe_id)
      REFERENCES gourmet.recipe (recipe_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE gourmet.ingredient
  OWNER TO postgres;



  CREATE TABLE gourmet.recipe_info
(
  recipe_info_id text NOT NULL,
  user_id text NOT NULL,
  create_date date,
  edit_date date,
  CONSTRAINT recipe_info_pkey PRIMARY KEY (recipe_info_id),
  CONSTRAINT recipe_info_user_id_fkey FOREIGN KEY (user_id)
      REFERENCES gourmet.users (user_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE gourmet.recipe_info
  OWNER TO postgres;
